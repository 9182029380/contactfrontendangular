{"ast":null,"code":"import { Contact } from '../contact';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../user-registration.service\";\nimport * as i2 from \"@angular/forms\";\nexport class RegistrationComponent {\n  constructor(service) {\n    this.service = service;\n    this.contact = new Contact(\"\", \"\", \"\", \"\", \"\");\n  }\n  registerNow() {\n    let resp = this.service.doRegistration(this.contact);\n    resp.subscribe(data => this.message = data);\n  }\n  ngOnInit() {}\n}\nRegistrationComponent.ɵfac = function RegistrationComponent_Factory(t) {\n  return new (t || RegistrationComponent)(i0.ɵɵdirectiveInject(i1.UserRegistrationService));\n};\nRegistrationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegistrationComponent,\n  selectors: [[\"app-registration\"]],\n  decls: 54,\n  vars: 6,\n  consts: [[\"href\", \"//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/css/bootstrap.min.css\", \"rel\", \"stylesheet\", \"id\", \"bootstrap-css\"], [2, \"text-align\", \"center\"], [1, \"container\"], [1, \"row\"], [1, \"col-md-6\"], [1, \"text-center\"], [1, \"req\"], [1, \"form-group\"], [\"for\", \"Name\"], [\"required\", \"\", \"type\", \"text\", \"name\", \"name\", \"id\", \"name\", \"maxlength\", \"28\", \"placeholder\", \"Enter your fullname...\", 1, \"form-control\", \"phone\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"email\"], [\"type\", \"text\", \"name\", \"email\", \"id\", \"txt\", \"required\", \"\", \"placeholder\", \"Enter valid email address\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"errFirst\"], [\"for\", \"phone\"], [\"type\", \"text\", \"name\", \"phone\", \"id\", \"txt\", \"placeholder\", \"Phone Number\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"errLast\"], [\"for\", \"city\"], [\"required\", \"\", \"type\", \"text\", \"name\", \"city\", \"id\", \"city\", \"placeholder\", \"City Name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"status\", 1, \"status\"], [\"for\", \"zipcode\"], [\"type\", \"text\", \"name\", \"zipcode\", \"id\", \"txt\", \"placeholder\", \"zipcode\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", \"name\", \"submit_reg\", \"value\", \"Register\", 1, \"btn\", \"btn-success\", 3, \"click\"], [\"href\", \"/search\", 1, \"btn\", \"btn-success\"]],\n  template: function RegistrationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"link\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"h1\");\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"div\", 3)(6, \"div\", 4)(7, \"form\")(8, \"fieldset\")(9, \"legend\", 5);\n      i0.ɵɵtext(10, \" Valid information is required to register. \");\n      i0.ɵɵelementStart(11, \"span\", 6)(12, \"small\");\n      i0.ɵɵtext(13, \" required *\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(14, \"div\", 7)(15, \"label\", 8)(16, \"span\", 6);\n      i0.ɵɵtext(17, \"* \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(18, \" Name: \");\n      i0.ɵɵelementStart(19, \"small\");\n      i0.ɵɵtext(20, \"This will be your login contact name\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function RegistrationComponent_Template_input_ngModelChange_21_listener($event) {\n        return ctx.contact.name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"div\", 7)(23, \"label\", 10)(24, \"span\", 6);\n      i0.ɵɵtext(25, \"* \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(26, \" Email: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function RegistrationComponent_Template_input_ngModelChange_27_listener($event) {\n        return ctx.contact.email = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(28, \"div\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"div\", 7)(30, \"label\", 13)(31, \"span\", 6);\n      i0.ɵɵtext(32, \"* \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(33, \" phone : \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"input\", 14);\n      i0.ɵɵlistener(\"ngModelChange\", function RegistrationComponent_Template_input_ngModelChange_34_listener($event) {\n        return ctx.contact.phone = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(35, \"div\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"div\", 7)(37, \"label\", 16)(38, \"span\", 6);\n      i0.ɵɵtext(39, \"* \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(40, \" city: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"input\", 17);\n      i0.ɵɵlistener(\"ngModelChange\", function RegistrationComponent_Template_input_ngModelChange_41_listener($event) {\n        return ctx.contact.city = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(42, \"div\", 18);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"div\", 7)(44, \"label\", 19)(45, \"span\", 6);\n      i0.ɵɵtext(46, \"* \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(47, \" zipcode : \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(48, \"input\", 20);\n      i0.ɵɵlistener(\"ngModelChange\", function RegistrationComponent_Template_input_ngModelChange_48_listener($event) {\n        return ctx.contact.zipcode = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(49, \"div\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(50, \"div\", 7)(51, \"input\", 21);\n      i0.ɵɵlistener(\"click\", function RegistrationComponent_Template_input_click_51_listener() {\n        return ctx.registerNow();\n      });\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(52, \"a\", 22);\n      i0.ɵɵtext(53, \"Get All Users\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.message);\n      i0.ɵɵadvance(18);\n      i0.ɵɵproperty(\"ngModel\", ctx.contact.name);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.contact.email);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.contact.phone);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.contact.city);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.contact.zipcode);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.MaxLengthValidator, i2.NgModel, i2.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Contact","RegistrationComponent","constructor","service","contact","registerNow","resp","doRegistration","subscribe","data","message","ngOnInit","i0","ɵɵdirectiveInject","i1","UserRegistrationService","selectors","decls","vars","consts","template","RegistrationComponent_Template","rf","ctx","ɵɵelement","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","RegistrationComponent_Template_input_ngModelChange_21_listener","$event","name","RegistrationComponent_Template_input_ngModelChange_27_listener","email","RegistrationComponent_Template_input_ngModelChange_34_listener","phone","RegistrationComponent_Template_input_ngModelChange_41_listener","city","RegistrationComponent_Template_input_ngModelChange_48_listener","zipcode","RegistrationComponent_Template_input_click_51_listener","ɵɵadvance","ɵɵtextInterpolate","ɵɵproperty"],"sources":["C:\\Users\\Admin\\Downloads\\AngularRegistrationPage\\src\\app\\registration\\registration.component.ts","C:\\Users\\Admin\\Downloads\\AngularRegistrationPage\\src\\app\\registration\\registration.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\nimport { UserRegistrationService } from '../user-registration.service';\r\nimport { Contact } from '../contact';\r\n\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.css']\r\n})\r\nexport class RegistrationComponent implements OnInit {\r\n\r\n  contact : Contact = new Contact(\"\",\"\",\"\",\"\",\"\");\r\n  message: any;\r\n\r\n  constructor(private service: UserRegistrationService){\r\n    \r\n  }\r\n\r\n  public registerNow(){\r\n    let resp=this.service.doRegistration(this.contact);\r\n    resp.subscribe((data)=>this.message=data);\r\n      }\r\n\r\n  ngOnInit() {}\r\n\r\n}\r\n","<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\r\n<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/js/bootstrap.min.js\"></script>\r\n<script src=\"//code.jquery.com/jquery-1.11.1.min.js\"></script>\r\n\r\n<!------ Include the above in your HEAD tag ---------->\r\n<div style=\"text-align: center\">\r\n  <h1>{{ message }}</h1>\r\n</div>\r\n<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n        \r\n      <form>\r\n        <fieldset>\r\n          <legend class=\"text-center\">\r\n            Valid information is required to register.\r\n            <span class=\"req\"><small> required *</small></span>\r\n          </legend>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"Name\"\r\n              ><span class=\"req\">* </span> Name:\r\n              <small>This will be your login contact name</small>\r\n            </label>\r\n            <input\r\n              required\r\n              type=\"text\"\r\n              [(ngModel)]=\"contact.name\"\r\n              name=\"name\"\r\n              id=\"name\"\r\n              class=\"form-control phone\"\r\n              maxlength=\"28\"\r\n              placeholder=\"Enter your fullname...\"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"email\"><span class=\"req\">* </span> Email: </label>\r\n            <input\r\n              class=\"form-control\"\r\n              type=\"text\"\r\n              [(ngModel)]=\"contact.email\"\r\n              name=\"email\"\r\n              id=\"txt\"\r\n              required\r\n              placeholder=\"Enter valid email address\"\r\n            />\r\n            <div id=\"errFirst\"></div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"phone\"\r\n              ><span class=\"req\">* </span> phone :\r\n            </label>\r\n            <input\r\n              class=\"form-control\"\r\n              type=\"text\"\r\n              [(ngModel)]=\"contact.phone\"\r\n              name=\"phone\"\r\n              id=\"txt\"\r\n              placeholder=\"Phone Number\"\r\n              required\r\n            />\r\n            <div id=\"errLast\"></div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"city\"><span class=\"req\">* </span> city: </label>\r\n            <input\r\n              class=\"form-control\"\r\n              required\r\n              type=\"text\"\r\n              [(ngModel)]=\"contact.city\"\r\n              name=\"city\"\r\n              id=\"city\"\r\n              placeholder=\"City Name\"\r\n            />\r\n            <div class=\"status\" id=\"status\"></div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"zipcode\"\r\n              ><span class=\"req\">* </span> zipcode :\r\n            </label>\r\n            <input\r\n              class=\"form-control\"\r\n              type=\"text\"\r\n              [(ngModel)]=\"contact.zipcode\"\r\n              name=\"zipcode\"\r\n              id=\"txt\"\r\n              placeholder=\"zipcode\"\r\n              required\r\n            />\r\n            <div id=\"errLast\"></div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <input\r\n              class=\"btn btn-success\"\r\n              type=\"submit\"\r\n              name=\"submit_reg\"\r\n              value=\"Register\"\r\n              (click)=\"registerNow()\"\r\n            />\r\n          </div>\r\n          \r\n        </fieldset>\r\n      </form>\r\n      <!-- ends register form -->\r\n      <!-- second for to fiter user-->\r\n      <a href=\"/search\" class=\"btn btn-success\">Get All Users</a>\r\n    </div>\r\n\r\n    <!-- ends col-6 -->\r\n  </div>\r\n</div>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}